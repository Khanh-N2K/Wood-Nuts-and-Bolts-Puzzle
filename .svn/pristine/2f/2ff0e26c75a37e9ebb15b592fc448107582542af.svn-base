using UnityEngine;

public class HolesSpawner : MonoBehaviour
{
    [SerializeField] private GameObject wallHolePrefab;
    [SerializeField] private GameObject plateHolePrefab;
    private GameObject wallHolesHolder;

    private void Start()
    {
        this.wallHolesHolder = GameObject.FindWithTag(Config.Instance.WallHolesHolderTag);
        this.SpawnHoles();
        this.InitUpdatePlate();
    }

    private void SpawnHoles()
    {
        GameObject boltsHolder = GameObject.FindWithTag(Config.Instance.BoltsHolderTag);
        for(int i=0; i<boltsHolder.transform.childCount; i++)
        {
            GameObject boltObject = boltsHolder.transform.GetChild(i).gameObject;
            Bolt bolt = boltObject.GetComponent<Bolt>();
            WallHole wallHole = this.SpawnWallHole(bolt);
            this.SpawnPlateHoles(bolt, wallHole);
        }
    }

    private WallHole SpawnWallHole(Bolt bolt)
    {
        GameObject newWallHoleObject = Instantiate(this.wallHolePrefab, bolt.transform.position, bolt.transform.rotation, this.wallHolesHolder.transform);
        
        WallHole wallHole = newWallHoleObject.GetComponent<WallHole>();
        wallHole.PinBolt(bolt);
        bolt.ChangeWallHole(wallHole);

        return wallHole;
    }

    private void SpawnPlateHoles(Bolt bolt, WallHole wallHole)
    {
        Plate[] plates = ColliderCatcher.Instance.CatchPlates(wallHole);

        PlateHole plateHole;
        SpriteMask plateHoleSpriteMask;
        foreach (Plate plate in plates)
        {
            GameObject newPlateHoleObject = Instantiate(this.plateHolePrefab, bolt.transform.position, bolt.transform.rotation, plate.transform);
            plateHole = newPlateHoleObject.GetComponent<PlateHole>();

            plateHole.InitPinnedBolt(bolt);
            bolt.AddPlateHole(plateHole);
            plate.AddPlateHole(plateHole);

            plateHoleSpriteMask = plateHole.GetComponent<SpriteMask>();
            plateHoleSpriteMask.frontSortingLayerID = plate.GetComponent<SpriteRenderer>().sortingLayerID;
        }
    }

    private void InitUpdatePlate()
    {
        GameObject platesHolder = GameObject.FindWithTag(Config.Instance.PlatesHolderTag);
        for(int i=0; i< platesHolder.transform.childCount; i++) 
        {
            for(int j=0; j< platesHolder.transform.GetChild(i).childCount; j++)
            {
                Plate plate = platesHolder.transform.GetChild(i).GetChild(j).GetComponent<Plate>();
                plate.UpdatePlateHoles();
            }
        }
    }
}
